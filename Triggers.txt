CREATE generator increment^
CREATE OR ALTER TRIGGER auto_gen FOR action_types BEFORE INSERT
AS
BEGIN
 new.action_id = gen_id(increment,1);
END^

CREATE EXCEPTION ERROR_STAGE 'ERROR: CANNOT DELETE STAGE TYPE'^
CREATE OR ALTER TRIGGER check_stage FOR stage_type BEFORE DELETE OR UPDATE
AS
BEGIN
 IF (OLD.stage_id IN (SELECT club_cup.stage FROM club_cup)) THEN
 EXCEPTION ERROR_STAGE;
END^


CREATE OR ALTER TRIGGER update_league_table FOR game AFTER INSERT
AS
BEGIN
EXECUTE PROCEDURE update_league(NEW.game_date, NEW.game_date, NEW.league_name);
END^


CREATE EXCEPTION RED_CARD 'ERROR: THIS PLAYER CANNOT DO ANY ACTION, HE TOOK A RED CARD'^
CREATE OR ALTER TRIGGER player_out FOR action BEFORE INSERT
AS
BEGIN
IF (NEW.player_name IN (SELECT player_name FROM action WHERE action_type=3)) THEN
EXCEPTION RED_CARD;
END^

CREATE EXCEPTION GOAL_AND_PASS 'ERROR: ONE PLAYER CANNOT BE AUTHOR AND ASSISTENT FOR ONE GOAL'^
CREATE OR ALTER TRIGGER player_goal_assist FOR action BEFORE INSERT
AS
BEGIN
IF (NEW.player_name IN (SELECT player_name FROM action WHERE action_type=1) AND NEW.action_type=4) THEN
EXCEPTION GOAL_AND_PASS;
END^